<div class="left_block content">
	<div class="data">
		<?php
		Core_Page::instance()->execute();
		?>
	</div>
</div>

<div class="right_block">
	<div class="content">
		<?php
		// Разделы магазина
		if (Core::moduleIsActive('shop'))
		{
			$Shop_Controller_Show = new Shop_Controller_Show(
				Core_Entity::factory('Shop', Core_Page::instance()->libParams['shopId'])
			);
			$Shop_Controller_Show
				->xsl(
					Core_Entity::factory('Xsl')->getByName('МагазинГруппыТоваровНаГлавной')
				)
				->groupsMode('tree')
				->group(0)
				->limit(0)
				->show();
		}

		// Фильтр справа
		if (Core::moduleIsActive('shop') && isset(Core_Page::instance()->libParams['shopId']))
		{
			$oShop = Core_Entity::factory('Shop', Core_Page::instance()->libParams['shopId']);

			$Shop_Controller_Show = new Shop_Controller_Show($oShop);
			$Shop_Controller_Show
				->xsl(
					Core_Entity::factory('Xsl')->getByName('МагазинФильтр')
				)
				->groupsMode('tree')
				->limit(0)
				->itemsProperties(TRUE);

			if (is_object(Core_Page::instance()->object)
			&& get_class(Core_Page::instance()->object) == 'Shop_Controller_Show')
			{
				$Shop_Controller_Show->group(Core_Page::instance()->object->group);
				$iCurrentShopGroup = Core_Page::instance()->object->group;
			}
			else
			{
				$iCurrentShopGroup = 0;
			}
			
			$Shop_Controller_Show->group($iCurrentShopGroup);
			
			if ($Shop_Controller_Show->group == 0)
			{
				$Shop_Controller_Show->group(FALSE);
			}

			$price_from = intval(Core_Array::getGet('price_from'));
			$price_to = intval(Core_Array::getGet('price_to'));

			$price_from && $Shop_Controller_Show->addFilter('price', '>=', $price_from);
			$price_to && $Shop_Controller_Show->addFilter('price', '<=', $price_to);

			// Sorting
			if (Core_Array::getGet('sorting'))
			{
				$sorting = intval(Core_Array::getGet('sorting'));
				$Shop_Controller_Show->addEntity(
					Core::factory('Core_Xml_Entity')
						->name('sorting')->value($sorting)
				);
			}

			// Producers
			if (Core_Array::getGet('producer_id'))
			{
				$iProducerId = intval(Core_Array::getGet('producer_id'));
				$Shop_Controller_Show->producer($iProducerId);

				$Shop_Controller_Show->addEntity(
					Core::factory('Core_Xml_Entity')
						->name('producer_id')->value($iProducerId)
				);
			}

			// Additional properties
			$oShop_Item_Property_List = Core_Entity::factory('Shop_Item_Property_List', $oShop->id);
			$aProperties = $oShop_Item_Property_List->Properties->findAll();

			foreach ($aProperties as $oProperty)
			{
				$aPropertiesValue = Core_Array::getGet('property_' . $oProperty->id);
				if ($aPropertiesValue)
				{
					$Shop_Controller_Show->addFilter('property', $oProperty->id, '=', $aPropertiesValue);
				}
				elseif (!is_null(Core_Array::getGet('property_' . $oProperty->id . '_from')))
				{
					$tmpFrom = Core_Array::getGet('property_' . $oProperty->id . '_from');
					$tmpTo = Core_Array::getGet('property_' . $oProperty->id . '_to');

					$tmpFrom != ''
						&& $Shop_Controller_Show->addFilter('property', $oProperty->id, '>=', $tmpFrom);

					$tmpTo != ''
						&& $Shop_Controller_Show->addFilter('property', $oProperty->id, '<=', $tmpTo);
				}
			}

			/* Количество */
			$on_page = intval(Core_Array::getGet('on_page'));
			if ($on_page > 0 && $on_page < 150)
			{
				$Shop_Controller_Show->addEntity(
					Core::factory('Core_Xml_Entity')
						->name('on_page')->value($on_page)
				);
			}

			/* Производители */
			$Shop_Controller_Show->addProducers();

			$Shop_Controller_Show
				//Фильтровать по ярлыкам
				->filterShortcuts(TRUE)
				->addMinMaxPrice()
				->show();
		}

		// Последний заказ
		if (Core::moduleIsActive('shop') && Core_Array::get(Core_Page::instance()->libParams, 'shopId'))
		{
			$oShop = Core_Entity::factory('Shop', Core_Page::instance()->libParams['shopId']);

			$Shop_Controller_Show = new Shop_Controller_Show(
				$oShop
			);

			$Shop_Controller_Show
				->xsl(
					Core_Entity::factory('Xsl')->getByName('МагазинПоследнийЗаказ')
				)
				->groupsMode('none')
				->limit(0);

			$oShop_Orders = $oShop->Shop_Orders;
			$oShop_Orders
				->queryBuilder()
				->where('shop_orders.paid', '=', 1)
				->clearOrderBy()
				->orderBy('shop_orders.id', 'DESC')
				->limit(1);

			$aShop_Orders = $oShop_Orders->findAll();

			if (count($aShop_Orders))
			{
				foreach ($aShop_Orders as $oShop_Order)
				{
					$aShop_Order_Items = $oShop_Order->Shop_Order_Items->findAll();

					foreach ($aShop_Order_Items as $oShop_Order_Item)
					{
						if ($oShop_Order_Item->shop_item_id)
						{
							$oShop_Item = Core_Entity::factory('Shop_Item')->find($oShop_Order_Item->shop_item_id);

							!is_null($oShop_Item->id) && $Shop_Controller_Show->addEntity(
								$oShop_Item
									->addForbiddenTag('text')
									->addForbiddenTag('description')
									->addForbiddenTag('shop_producer')
									->showXmlComments(FALSE)
									->showXmlAssociatedItems(FALSE)
									->showXmlModifications(FALSE)
									->showXmlSpecialprices(FALSE)
									->showXmlTags(FALSE)
									->showXmlWarehousesItems(FALSE)
									->showXmlSiteuser(FALSE)
									->showXmlProperties(FALSE)
							);

							//Если модификация, то в неё добавляем родителя
							if ($oShop_Item->modification_id > 0)
							{
								$oShop_Parent_Item = Core_Entity::factory('Shop_Item', $oShop_Item->modification_id);
								!is_null($oShop_Parent_Item->id) && $oShop_Item->addEntity(
									$oShop_Parent_Item
								);
							}
						}
					}

					$Shop_Controller_Show->addEntity(
						$oShop_Order
					);
				}

				$Shop_Controller_Show
					->itemsForbiddenTags(array('text'))
					->show();
			}
		}

		// Метки
		if (Core::moduleIsActive('shop') && Core::moduleIsActive('tag'))
		{
			$Shop_Controller_Tag_Show = new Shop_Controller_Tag_Show(
				Core_Entity::factory('Shop', Core_Page::instance()->libParams['shopId'])
			);
			$Shop_Controller_Tag_Show
				->xsl(
					Core_Entity::factory('Xsl')->getByName('ОблакоТэговМагазин')
				);

			if (is_object(Core_Page::instance()->object)
			&& get_class(Core_Page::instance()->object) == 'Shop_Controller_Show'
			&& Core_Page::instance()->object->group)
			{
				$Shop_Controller_Tag_Show->group(Core_Page::instance()->object->group);
			}

			$Shop_Controller_Tag_Show->show();
		}
		?>
	</div>
</div>
<div class="clearing"></div>